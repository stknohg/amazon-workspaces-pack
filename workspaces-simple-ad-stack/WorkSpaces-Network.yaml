AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SystemName:
    Description: "Your system name"
    Type: String
    MinLength: 1
    MaxLength: 10
    AllowedPattern: "^[a-zA-Z0-9]+$"
    Default: "wssad"
  EnvironmentName:
    Description: "Your environment name"
    Type: String
    MinLength: 1
    MaxLength: 10
    AllowedPattern: "^[a-zA-Z0-9]+$"
    Default: "prd"
  AZ1:
    Description: "Public subnet1, private subnet1 AZ name"
    Type: AWS::EC2::AvailabilityZone::Name
  AZ2:
    Description: "Public subnet2, private subnet2 AZ name"
    Type: AWS::EC2::AvailabilityZone::Name
  VPCCIDR:
    Description: "Your VPC CIDR"
    Type: String
    MinLength: 9
    MaxLength: 19
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: "10.0.0.0/16"
  PublicSubnet1CIDR:
    Description: "Public Subnet1 CIDR"
    Type: String
    MinLength: 9
    MaxLength: 19
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: "10.0.0.0/24"
  PublicSubnet2CIDR:
    Description: "Public Subnet2 CIDR"
    Type: String
    MinLength: 9
    MaxLength: 19
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: "10.0.1.0/24"
  PrivateSubnet1CIDR:
    Description: "Private Subnet1 CIDR"
    Type: String
    MinLength: 9
    MaxLength: 19
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: "10.0.2.0/24"
  PrivateSubnet2CIDR:
    Description: "Private Subnet2 CIDR"
    Type: String
    MinLength: 9
    MaxLength: 19
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: "10.0.3.0/24"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Basic parameters"
        Parameters:
          - SystemName
          - EnvironmentName
      - Label:
          default: "VPC parameters"
        Parameters:
          - AZ1
          - AZ2
          - VPCCIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VPCCIDR
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-vpc"

  # Internet Gateway
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-igw"
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: IGW

  # Subnet
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AZ1
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnet1CIDR
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-public-subnet1"
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AZ2
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnet2CIDR
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-public-subnet2"
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AZ1
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet1CIDR
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-private-subnet1"
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: AZ2
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet2CIDR
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-private-subnet2"

  # EIP, NAT Gateway
  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-eip1"
  EIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-eip2"
  NGW1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EIP1
          - AllocationId
      SubnetId:
        Ref: PublicSubnet1
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-ngw1"
  NGW2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EIP2
          - AllocationId
      SubnetId:
        Ref: PublicSubnet2
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-ngw2"

  # Route Tables
  Public1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-public1-rtb"
  Public1Route1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: Public1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: IGW
  Public1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: Public1RouteTable
      SubnetId:
        Ref: PublicSubnet1
  Public2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-public2-rtb"
  Public2Route1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: Public2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: IGW
  Public2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: Public2RouteTable
      SubnetId:
        Ref: PublicSubnet2
  Private1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-private1-rtb"
  Private1Route1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: Private1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NGW1
  Private1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: Private1RouteTable
      SubnetId:
        Ref: PrivateSubnet1
  Private2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Sub: "${SystemName}-${EnvironmentName}-private2-rtb"
  Private2Route1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: Private2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NGW2
  Private2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: Private2RouteTable
      SubnetId:
        Ref: PrivateSubnet2
